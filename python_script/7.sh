#!/bin/bash
#SBATCH --output=nr_result         # 输出文件名
#SBATCH --error=nr.err.txt         # 错误文件名
#SBATCH --nodes=1                  # 节点数
#SBATCH --ntasks-per-node=1        # 每个节点的任务数
#SBATCH --cpus-per-task=32         # 每个任务使用的 CPU 核心数
#SBATCH --mem=150G                 # 每个任务使用的内存大小
#SBATCH -p cpuXeon6458
#SBATCH -J annotation
#SBATCH --qos=normal

# Activate conda environment
source ~/conda/bin/activate
conda activate prokka

# Set variables (modify these paths as needed)
BIN_DIR="/path/to/genome"
PROKKA_OUTPUT_DIR="/path/to/prokka_output"
NR_DATABASE_FOLDER="/path/to/nr_bacteria"
OUTPUT_FOLDER="/path/to/nr_annotation_result"
DB_NAME="nr_bacteria"
ANNOTATION_FILE="/path/to/nr_bacteria_annotations.txt"
NUM_THREADS=32
TEMP_OUTPUT_FOLDER="/path/to/temp_output"

# Create necessary directories
mkdir -p "$PROKKA_OUTPUT_DIR"
mkdir -p "$TEMP_OUTPUT_FOLDER"
mkdir -p "$OUTPUT_FOLDER"

# Run Prokka for ORF prediction
for bin_file in "$BIN_DIR"/*.fna; do
    bin_basename=$(basename "$bin_file" .fna)
    prokka --outdir "$PROKKA_OUTPUT_DIR/$bin_basename" --prefix "$bin_basename" --cpus "$NUM_THREADS" "$bin_file"
done

# Activate diamond environment for BLASTp
conda activate local

# Run BLASTp for each .faa file generated by Prokka
for prokka_dir in "$PROKKA_OUTPUT_DIR"/*; do
    bin_basename=$(basename "$prokka_dir")
    fasta_file="$prokka_dir/${bin_basename}.faa"
    output_file="$TEMP_OUTPUT_FOLDER/${bin_basename}_blastp_results.txt"
    final_output_file="$OUTPUT_FOLDER/${bin_basename}.txt"

    echo "Running BLASTp for $fasta_file"
    blastp -query "$fasta_file" -db "$NR_DATABASE_FOLDER/$DB_NAME" -out "$output_file" -evalue 1e-5 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore" -max_target_seqs 10 -num_threads "$NUM_THREADS"
    echo "BLASTp for $fasta_file completed in: $SECONDS seconds"

    # Select the best match (highest similarity)
    awk '{if (!($1 in a) || $3 > a[$1]) a[$1]=$0} END {for (i in a) print a[i]}' "$output_file" > "${TEMP_OUTPUT_FOLDER}/${bin_basename}_best_blastp_results.txt"

    # Annotate results and extract required parts
    awk 'BEGIN {OFS="\t"}
        NR==FNR {desc[$1]=$0; next}
        {
            if ($2 in desc) {
                split(desc[$2], arr, " ")
                func_desc = ""
                for (i = 2; i < length(arr); i++) {
                    if (arr[i] ~ /^\[.*\]$/) break
                    func_desc = func_desc ? func_desc " " arr[i] : arr[i]
                }
                print $0, func_desc
            }
        }' "$ANNOTATION_FILE" "${TEMP_OUTPUT_FOLDER}/${bin_basename}_best_blastp_results.txt" > "$final_output_file"

    echo "Annotation results saved to $final_output_file"
done

echo "All files processed successfully"
